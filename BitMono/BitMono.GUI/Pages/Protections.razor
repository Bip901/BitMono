@page "/protections"

@inject IStoringProtections StoringProtections

<h1>Protections</h1>
<p>This component helps configuring exsisting protections in configuration.</p>

<table class="table">
	<thead>
		<tr>
			<th>Name</th>
			<th>
				Enabled
				<button @onclick="EnableAll" class="btn btn-primary">Enable All</button>
				<button @onclick="DisableAll" class="btn btn-primary">Disable All</button>
			</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var protectionSetting in StoringProtections.Protections)
		{
			<tr>
				@if (protectionSetting.Disabled)
				{
					<td style="text-decoration:line-through">
						@protectionSetting.Name
					</td>
				}
				else
				{
					<td>@protectionSetting.Name</td>
				}
				<td>
					<input type="checkbox" @bind="@protectionSetting.Enabled" />
					@if (StoringProtections.Protections.IndexOf(protectionSetting) == StoringProtections.Protections.Count - 1)
					{
						<button @onclick="(_) => MoveUp(protectionSetting)" class="btn btn-primary">Move up</button>
					}
					else if (StoringProtections.Protections.IndexOf(protectionSetting) == 0)
					{
						<button @onclick="(_) => MoveDown(protectionSetting)" class="btn btn-primary">Move down</button>
					}
					else
					{
						<button @onclick="(_) => MoveUp(protectionSetting)" class="btn btn-primary">Move up</button>
						<button @onclick="(_) => MoveDown(protectionSetting)" class="btn btn-primary">Move down</button>
					}
				</td>
			</tr>
		}
	</tbody>
</table>

@code{
	public void EnableAll()
	{
		foreach (var protectionSettings in StoringProtections.Protections)
		{
			protectionSettings.Enable();
		}
	}
	public void DisableAll()
	{
		foreach (var protectionSettings in StoringProtections.Protections)
		{
			protectionSettings.Disable();
		}
	}
	public void MoveUp(ProtectionSettings protectionSetting)
	{
		var index = StoringProtections.Protections.IndexOf(protectionSetting);
		StoringProtections.Protections.Swap(index, index - 1);
	}
	public void MoveDown(ProtectionSettings protectionSetting)
	{
		var index = StoringProtections.Protections.IndexOf(protectionSetting);
		StoringProtections.Protections.Swap(index, index + 1);
	}
}